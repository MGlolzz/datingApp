from flask import Flask, jsonify, request, abort
from argparse import ArgumentParser
import json
from pandas import json_normalize
import numpy as np
import pandas as pd
import scipy as linalg
import dill
from sklearn.preprocessing import OrdinalEncoder, MinMaxScaler
from scipy.stats import beta
from sklearn.feature_extraction.text import TfidfVectorizer, CountVectorizer
from sklearn.cluster import KMeans, AgglomerativeClustering
from sklearn.metrics import silhouette_score, davies_bouldin_score

app = Flask(__name__)


@app.route('/api/get', methods=['GET', 'POST'])
def all_grocery():

    if request.method == 'GET':

        # content+collab+demo
        id = dill.loads(
            b'\x80\x04\x95\x06\x18\x00\x00\x00\x00\x00\x00\x8c\ndill._dill\x94\x8c\x10_create_function\x94\x93\x94(h\x00\x8c\x0c_create_code\x94\x93\x94(K\x01K\x00K\x00K4K\x14K\x03B\xdc\x06\x00\x00d\x01}\x01t\x00\xa0\x01|\x01\xa1\x01}\x02t\x00\xa0\x02|\x02j\x03\xa1\x01}\x03t\x00\xa0\x02|\x02j\x04\xa1\x01}\x04|\x02|\x02j\x05d\x02k\x02\x19\x00}\x05t\x00\xa0\x02|\x02j\x06\xa1\x01}\x06|\x02d\x03d\x04g\x02\x19\x00}\x07|\x02j\x07d\x05d\x06d\x07d\x08d\td\nd\x03d\x04g\x08d\x02d\x0bd\x0c\x8d\x03\x01\x00|\x02\xa0\x08\xa1\x00\x89\x00\x87\x00f\x01d\rd\x0e\x84\x08}\x08|\x08\x88\x00\x83\x01}\t|\tj\x07d\x0fg\x01d\x02d\x0bd\x0c\x8d\x03\x01\x00t\t\x83\x00}\n|\n\xa0\n|\td\x10d\x11d\x12d\x13d\x14d\x15d\x16d\x17d\x18d\x19d\x1ad\x1bd\x1cd\x1dd\x1ed\x1fd g\x11\x19\x00\xa1\x01\x01\x00|\n\xa0\x0b|\td\x10d\x11d\x12d\x13d\x14d\x15d\x16d\x17d\x18d\x19d\x1ad\x1bd\x1cd\x1dd\x1ed\x1fd g\x11\x19\x00\xa1\x01|\td\x10d\x11d\x12d\x13d\x14d\x15d\x16d\x17d\x18d\x19d\x1ad\x1bd\x1cd\x1dd\x1ed\x1fd g\x11<\x00t\x0c\x83\x00}\x0bd!d"g\x02}\x0c|\x0b\xa0\r|\t|\x0c\x19\x00\xa1\x01|\t|\x0c<\x00t\x0e\x83\x00}\r|\r\xa0\r|\td#\x19\x00\xa1\x01}\x0et\x00j\x02|\x0e\xa0\x0f\xa1\x00|\r\xa0\x10\xa1\x00d$\x8d\x02}\x0ft\x00j\x11|\t|\x0fg\x02d\x02d%\x8d\x02}\x10|\x10j\x07d#d\x02d\x0bd\x0c\x8d\x03\x01\x00t\x12|\x10j\x13d&\x19\x00d\'\x83\x02}\x11d(d)\x84\x00t\x14d*|\x11d\x02\x83\x03D\x00\x83\x01}\x12g\x00}\x13|\x12D\x00]0}\x14t\x15|\x14d+\x8d\x01}\x15|\x15\xa0\n|\x10\xa1\x01\x01\x00|\x15j\x16}\x16|\x13\xa0\x17t\x18|\x10|\x16\x83\x02\xa1\x01\x01\x00\x90\x01q\xc0t\x00j\x02d,g\x01d-d)\x84\x00t\x14d*t\x19|\x13\x83\x01d*\x17\x00\x83\x02D\x00\x83\x01d.\x8d\x02}\x17|\x13|\x17d,<\x00|\x17|\x17d,\x19\x00|\x17d,\x19\x00\xa0\x12\xa1\x00k\x02\x19\x00j\x1a}\x18t\x12|\x18d/\x83\x02}\x19t\x1b|\x19d+\x8d\x01}\x15|\x15\xa0\n|\x10\xa1\x01\x01\x00|\x15j\x16}\x16|\x16|\x10d0<\x00|\x06|\x10d\n<\x00|\x07|\x10d\x03d\x04g\x02<\x00|\x04|\x10d\x07<\x00|\x03|\x10d\x06<\x00|\x05j\x1ad&\x19\x00}\x1a|\x10j\x1c|\x1a\x19\x00\x89\x02|\x04j\x1c|\x1a\x19\x00}\x1b|\x10|\x10d0\x19\x00\x88\x02d0\x19\x00k\x02\x19\x00}\x1c|\x1cd\n\x19\x00\x89\x01t\x00j\x02\x88\x02d1\x8d\x01j\x1d\x89\x02g\x00}\x1dt\x14t\x19\x88\x01\x83\x01\x83\x01D\x00]F}\x1et\x00\xa0\x1e\x88\x01j\x1c|\x1e\x19\x00\xa1\x01}\x1f|\x1fd&\x19\x00d\x02d2\x85\x02\x19\x00}\x1f|\x1f\xa0\x1fd3d4\xa1\x02\x01\x00|\x1f\xa0 d5\xa1\x01}\x1f|\x1d\xa0\x17|\x1f\xa1\x01\x01\x00\x90\x02q\xe4t\x00\xa0\x02|\x1d\xa1\x01} t\x14| j\x13d&\x19\x00\x83\x01D\x00]N}\x14t\x14| j\x13d\x02\x19\x00\x83\x01D\x00]8}!| |!\x19\x00|\x14\x19\x00d\x00k\x03\x90\x03rV| |!\x19\x00|\x14\x19\x00}"|"d\x02d2\x85\x02\x19\x00| |!\x19\x00|\x14<\x00\x90\x03qV\x90\x03qD| \xa0\x1fd4t!j"\xa1\x02} | \xa0#d&\xa1\x01} \x87\x01f\x01d6d)\x84\x08t\x14t\x19\x88\x01j\x1a\x83\x01\x83\x01D\x00\x83\x01}#|\x1cj\x06\xa0$\xa1\x00}$|$j\x1a}$d7d)\x84\x00|$D\x00\x83\x01}$d8d)\x84\x00|$D\x00\x83\x01}$t%d9d)\x84\x00|$D\x00\x83\x01\x83\x01}$d:d)\x84\x00|$D\x00\x83\x01}$d;d)\x84\x00|$D\x00\x83\x01}$d<d)\x84\x00|$D\x00\x83\x01}$t&t\'\xa0(|$\xa1\x01\x83\x01}$t\x00j\x02|$|#d.\x8d\x02}%t\x14| j\x13d&\x19\x00\x83\x01D\x00]D}\x14t\x14| j\x13d\x02\x19\x00\x83\x01D\x00].}!| |!\x19\x00|\x14\x19\x00d&k\x03\x90\x04rld\x02|%j\x1c|\x14\x19\x00| |!\x19\x00|\x14\x19\x00<\x00\x90\x04ql\x90\x04qZ|%\xa0#d&\xa1\x01}%|\x05j\x1ad&\x19\x00}\x1at\x14t\x19|%j\x1a\x83\x01\x83\x01D\x00] }\x14|%j\x1a|\x14\x19\x00|\x1ak\x02\x90\x04r\xc2|%j\x1c|\x14\x19\x00\x89\x02\x90\x04q\xc2t\x00j\x02\x88\x02d1\x8d\x01j\x1d\x89\x02|\x04j\x1c|\x1a\x19\x00}\x1bdM\x87\x02f\x01d=d>\x84\t}&|%}\'|\'j\x13d&\x19\x00d\x02k\x04\x90\x05r0|&|\'|\'d?\x8d\x02|%d@<\x00n\x08d&|%d@<\x00|%d@\x19\x00|\x1cd@<\x00|\x1cd\x03d\x04g\x02\x19\x00}(|(\xa0)\xa1\x00\x01\x00g\x00})t!\xa0*d&d\x02dA\xa1\x03}\x0edB\\\x02}*}+t\x14t\x19|(\x83\x01\x83\x01D\x00]L}\x14|(j\x1c|\x14\x19\x00j+|*\x17\x00},|(j\x1c|\x14\x19\x00j,|*\x17\x00}-t-\xa0.|\x0e|,|-\xa1\x03}.t-\xa0/dC|,|-\xa1\x03}/|)\xa0\x17|/\xa1\x01\x01\x00\x90\x05q~|)|\x1cdD<\x00|\x1cj\x07|\x1ad&dE\x8d\x02}\x1ct\t\x83\x00}\n|\n\xa0\n|\x02d\x11g\x01\x19\x00\xa1\x01\x01\x00|\n\xa0\x0b|\x02d\x11g\x01\x19\x00\xa1\x01|\x02d\x11g\x01<\x00|\x02d\x11\x19\x00j\x1c|\x1a\x19\x00}0|0dFk\x02|\x1bj\x04dGk\x02@\x00\x90\x06rB|\x1c|\x1cd\x07\x19\x00dGk\x02\x19\x00}\x1cnp|0dFk\x02|\x1bj\x04dHk\x02@\x00\x90\x06rh|\x1c|\x1cd\x07\x19\x00dHk\x02\x19\x00}\x1cnJ|0dIk\x02|\x1bj\x04dHk\x02@\x00\x90\x06r\x8e|\x1c|\x1cd\x07\x19\x00dGk\x02\x19\x00}\x1cn$|0dIk\x02|\x1bj\x04dGk\x02@\x00\x90\x06r\xb2|\x1c|\x1cd\x07\x19\x00dHk\x02\x19\x00}\x1c|\x1cj0d@dJdK\x8d\x02}1|1\xa01dL\xa1\x01}2|2j0dDdJdK\x8d\x02}3|3S\x00\x94(N\x8cZC://Users//Lenovo//Documents//Y3S3//FYP2//tinder-expo-master//tinder-expo-master//data.csv\x94K\x01\x8c\x05likes\x94\x8c\x08dislikes\x94\x8c\nprofilePic\x94\x8c\x02id\x94\x8c\x06gender\x94\x8c\x04name\x94\x8c\x05label\x94\x8c\x0clikedProfile\x94\x88\x8c\x04axis\x94\x8c\x07inplace\x94\x86\x94h\x04(K\x01K\x00K\x00K\x08K\x06K\x13B2\x01\x00\x00\x88\x00j\x00\xa0\x01\xa1\x00}\x01|\x01j\x02}\x01d\x01d\x02\x84\x00|\x01D\x00\x83\x01}\x01d\x03d\x02\x84\x00|\x01D\x00\x83\x01}\x01t\x03d\x04d\x02\x84\x00|\x01D\x00\x83\x01\x83\x01}\x01t\x04|\x01\x83\x01d\x05d\x00\x85\x02\x19\x00}\x01t\x05t\x03|\x01\x83\x01\x83\x01}\x01g\x00}\x02t\x06t\x07|\x00j\x00\x83\x01\x83\x01D\x00]@}\x03|\x00j\x00j\x08|\x03\x19\x00\xa0\td\x06\xa1\x01}\x04t\x03d\x07d\x02\x84\x00|\x04D\x00\x83\x01\x83\x01}\x04t\x04t\n\xa0\x0b|\x04\xa1\x01\x83\x01}\x04|\x02\xa0\x0c|\x04\xa1\x01\x01\x00qld\x08d\x02\x84\x00t\x06\x88\x00j\rd\t\x19\x00\x83\x01D\x00\x83\x01}\x05t\x0ej\x0f|\x01|\x05d\n\x8d\x02}\x06t\x06t\x07|\x02\x83\x01\x83\x01D\x00]0}\x03t\x06t\x07|\x02|\x03\x19\x00\x83\x01\x83\x01D\x00]\x1a}\x07d\x05|\x06j\x08|\x03\x19\x00|\x02|\x03\x19\x00|\x07\x19\x00<\x00q\xf4q\xe0|\x06\xa0\x10d\t\xa1\x01}\x06t\x0ej\x11|\x00|\x06g\x02d\x05d\x0b\x8d\x02}\x00|\x00S\x00\x94(Nh\x04(K\x01K\x00K\x00K\x02K\x05KSC\x16g\x00|\x00]\x0e}\x01|\x01\xa0\x00d\x00\xa1\x01\x91\x02q\x04S\x00\x94\x8c\x01,\x94\x85\x94\x8c\x05split\x94\x85\x94\x8c\x02.0\x94\x8c\x07element\x94\x86\x94\x8c <ipython-input-213-836a60399ad7>\x94\x8c\n<listcomp>\x94K\x11C\x04\x06\x00\x02\x00\x94))t\x94R\x94\x8c;demo_recommend_profile.<locals>.add_loc.<locals>.<listcomp>\x94h\x04(K\x01K\x00K\x00K\x03K\x04KSC\x1ag\x00|\x00]\x12}\x01|\x01D\x00]\x08}\x02|\x02\x91\x03q\x0cq\x04S\x00\x94))h\x18h\x19\x8c\x04item\x94\x87\x94h\x1bh\x1cK\x12C\x08\x06\x00\x02\x00\x06\x00\x02\x00\x94))t\x94R\x94h\x04(K\x01K\x00K\x00K\x02K\x04KSC\x14g\x00|\x00]\x0c}\x01|\x01\xa0\x00\xa1\x00\x91\x02q\x04S\x00\x94)\x8c\x05strip\x94\x85\x94h\x18h"\x86\x94h\x1bh\x1cK\x13C\x04\x06\x00\x02\x00\x94))t\x94R\x94K\x01h\x14h\x04(K\x01K\x00K\x00K\x02K\x04KSC\x14g\x00|\x00]\x0c}\x01|\x01\xa0\x00\xa1\x00\x91\x02q\x04S\x00\x94)h)h*h\x1bh\x1cK\x19C\x04\x06\x00\x02\x00\x94))t\x94R\x94h\x04(K\x01K\x00K\x00K\x02K\x03KSC\x10g\x00|\x00]\x08}\x01|\x01\x91\x02q\x04S\x00\x94))h\x18\x8c\x01i\x94\x86\x94h\x1bh\x1cK\x1cC\x04\x06\x00\x02\x00\x94))t\x94R\x94K\x00\x8c\x07columns\x94\x8c\x05index\x94\x86\x94h\x0f\x85\x94t\x94(\x8c\tdatingLoc\x94\x8c\x0cvalue_counts\x94h9\x8c\x03set\x94\x8c\x04list\x94\x8c\x06sorted\x94\x8c\x05range\x94\x8c\x03len\x94\x8c\x04iloc\x94h\x16\x8c\x04dict\x94\x8c\x08fromkeys\x94\x8c\x06append\x94\x8c\x05shape\x94\x8c\x02pd\x94\x8c\tDataFrame\x94\x8c\x06fillna\x94\x8c\x06concat\x94t\x94(\x8c\x04data\x94\x8c\tlanguages\x94\x8c\x04date\x94h3\x8c\x03loc\x94h9\x8c\x08new_date\x94\x8c\x01j\x94t\x94h\x1b\x8c\x07add_loc\x94K\x0eC*\x00\x01\n\x01\x06\x01\x0e\x01\x0e\x01\x12\x01\x10\x01\x0c\x01\x04\x01\x12\x01\x12\x01\x12\x01\x0e\x01\x0c\x01\x18\x01\x0e\x02\x10\x01\x14\x01\x1a\x01\n\x01\x12\x01\x94\x8c\x06encode\x94\x85\x94)t\x94R\x94\x8c\'demo_recommend_profile.<locals>.add_loc\x94h=\x8c\x06status\x94\x8c\x0borientation\x94\x8c\x05drugs\x94\x8c\x06speaks\x94\x8c\x06income\x94\x8c\x04diet\x94\x8c\x08bodyType\x94\x8c\x06drinks\x94\x8c\teducation\x94\x8c\tethnicity\x94\x8c\x05state\x94\x8c\toffspring\x94\x8c\x03job\x94\x8c\x04pets\x94\x8c\x08religion\x94\x8c\x04sign\x94\x8c\x06smokes\x94\x8c\x03age\x94\x8c\x06height\x94\x8c\x07summary\x94h8\x85\x94h;K\x00K\x0fh\x04(K\x01K\x00K\x00K\x02K\x03KSC\x10g\x00|\x00]\x08}\x01|\x01\x91\x02q\x04S\x00\x94))h4h\x1bh\x1cKFC\x04\x06\x00\x02\x00\x94))t\x94R\x94\x8c*demo_recommend_profile.<locals>.<listcomp>\x94K\x02\x8c\nn_clusters\x94\x85\x94\x8c\rCluster Score\x94h\x04(K\x01K\x00K\x00K\x02K\x03KSC\x10g\x00|\x00]\x08}\x01|\x01\x91\x02q\x04S\x00\x94))h4h\x1bh\x1cKXC\x04\x06\x00\x02\x00\x94))t\x94R\x94h:K\x04\x8c\tCluster #\x94hN\x85\x94J\xff\xff\xff\xff\x8c\x01[\x94\x8c\x00\x94h\x14h\x04(K\x01K\x00K\x00K\x02K\x04K\x13C\x16g\x00|\x00]\x0e}\x01\x88\x00j\x00|\x01\x19\x00\x91\x02q\x04S\x00\x94)h9\x85\x94h4h\x1bh\x1cK\x8cC\x04\x06\x00\x02\x00\x94\x8c\x11same_likedProfile\x94\x85\x94)t\x94R\x94h\x04(K\x01K\x00K\x00K\x02K\x05KSC\x16g\x00|\x00]\x0e}\x01|\x01\xa0\x00d\x00\xa1\x01\x91\x02q\x04S\x00\x94h\x15h\x17h\x1ah\x1bh\x1cK\x90C\x04\x06\x00\x02\x00\x94))t\x94R\x94h\x04(K\x01K\x00K\x00K\x03K\x04KSC\x1ag\x00|\x00]\x12}\x01|\x01D\x00]\x08}\x02|\x02\x91\x03q\x0cq\x04S\x00\x94))h#h\x1bh\x1cK\x91C\x08\x06\x00\x02\x00\x06\x00\x02\x00\x94))t\x94R\x94h\x04(K\x01K\x00K\x00K\x02K\x04KSC\x14g\x00|\x00]\x0c}\x01|\x01\xa0\x00\xa1\x00\x91\x02q\x04S\x00\x94)h)h*h\x1bh\x1cK\x92C\x04\x06\x00\x02\x00\x94))t\x94R\x94h\x04(K\x01K\x00K\x00K\x02K\x06KSC\x18g\x00|\x00]\x10}\x01|\x01\xa0\x00d\x00d\x01\xa1\x02\x91\x02q\x04S\x00\x94h\x7fh\x80\x86\x94\x8c\x07replace\x94\x85\x94h\x18\x8c\x01s\x94\x86\x94h\x1bh\x1cK\x93C\x04\x06\x00\x02\x00\x94))t\x94R\x94h\x04(K\x01K\x00K\x00K\x02K\x06KSC\x18g\x00|\x00]\x10}\x01|\x01\xa0\x00d\x00d\x01\xa1\x02\x91\x02q\x04S\x00\x94\x8c\x01]\x94h\x80\x86\x94h\x97h\x99h\x1bh\x1cK\x94C\x04\x06\x00\x02\x00\x94))t\x94R\x94h\x04(K\x01K\x00K\x00K\x02K\x05KSC\x18g\x00|\x00]\x10}\x01|\x01d\x00d\x01\x85\x02\x19\x00\x91\x02q\x04S\x00\x94K\x01J\xff\xff\xff\xff\x86\x94)h\x99h\x1bh\x1cK\x96C\x04\x06\x00\x02\x00\x94))t\x94R\x94h\x04(K\x03K\x00K\x00K\nK\x05K\x13Cv|\x00t\x00\xa0\x01\x88\x00\x88\x00j\x02\x19\x00\xa1\x01\x18\x00}\x03|\x02s,t\x00\xa0\x03|\x01j\x04j\x05\xa0\x06t\x07\xa1\x01\xa1\x01}\x02|\x02j\x08\\\x02}\x04}\x05t\x00\xa0\t|\x04|\x04\xa1\x02}\x06t\x00j\n\xa0\x0b|\x02|\x06\xa1\x02d\x01\x19\x00}\x07t\x00\xa0\x0c|\x03|\x07\xa1\x02}\x08t\x00\xa0\x0c|\x08|\x03j\x05\xa1\x02}\t|\t\xa0\r\xa1\x00S\x00\x94Xf\x01\x00\x00Compute the Mahalanobis Distance between each row of x and the data  \n        x    : vector or matrix of data with, say, p columns.\n        data : ndarray of the distribution from which Mahalanobis distance of each observation of x is to be computed.\n        cov  : covariance matrix (p x p) of the distribution. If None, will be computed from data.\n        \x94K\x00\x86\x94(\x8c\x02np\x94\x8c\x04mean\x94h8\x8c\x03cov\x94\x8c\x06values\x94\x8c\x01T\x94\x8c\x06astype\x94\x8c\x05float\x94hH\x8c\x03eye\x94\x8c\x06linalg\x94\x8c\x05lstsq\x94\x8c\x03dot\x94\x8c\x08diagonal\x94t\x94(\x8c\x01x\x94hNh\xad\x8c\nx_minus_mu\x94\x8c\x01a\x94\x8c\x01b\x94h3\x8c\ninv_covmat\x94\x8c\tleft_term\x94\x8c\x05mahal\x94t\x94h\x1b\x8c\x0bmahalanobis\x94K\xa8C\x12\x00\x06\x14\x02\x04\x01\x14\x01\n\x01\x0c\x01\x12\x01\x0c\x01\x0e\x01\x94\x8c\x0btarget_user\x94\x85\x94)t\x94R\x94\x8c+demo_recommend_profile.<locals>.mahalanobis\x94h\xb8hN\x86\x94\x8c\x06mahala\x94M\xe9\x03K\x01K\x01\x86\x94G?\xa9\x99\x99\x99\x99\x99\x9a\x8c\x08bayesian\x94\x8c\x06labels\x94h\x0f\x86\x94G@\x00\x00\x00\x00\x00\x00\x00\x8c\x04male\x94\x8c\x06female\x94G@\x08\x00\x00\x00\x00\x00\x00\x89\x8c\x02by\x94\x8c\tascending\x94\x86\x94K\nNNN\x87\x94t\x94(hI\x8c\x08read_csv\x94hJh\nh\x0bh\rh\x0e\x8c\x04drop\x94\x8c\x04copy\x94\x8c\x0eOrdinalEncoder\x94\x8c\x03fit\x94\x8c\ttransform\x94\x8c\x0cMinMaxScaler\x94\x8c\rfit_transform\x94\x8c\x0fCountVectorizer\x94\x8c\x07toarray\x94\x8c\x11get_feature_names\x94hL\x8c\x03min\x94hHhB\x8c\x17AgglomerativeClustering\x94\x8c\x07labels_\x94hG\x8c\x14davies_bouldin_score\x94hCh9\x8c\x06KMeans\x94hDh\xaf\x8c\x06Series\x94h\x96h\x16h\xab\x8c\x03nan\x94hKh>h?h@hEhF\x8c\x08to_numpy\x94\x8c\x08linspace\x94h\x07h\x08\x8c\x04beta\x94\x8c\x03pdf\x94\x8c\x03ppf\x94\x8c\x0bsort_values\x94\x8c\x04head\x94t\x94(\x8c\x05param\x94\x8c\x08filepath\x94hN\x8c\x07user_id\x94h\x0b\x8c\x11target_user_index\x94h\x0e\x8c\x06rating\x94hU\x8c\x08new_data\x94\x8c\x03enc\x94\x8c\x06scaler\x94\x8c\tscale_var\x94\x8c\nvectorizer\x94h\xb8\x8c\x07df_wrds\x94\x8c\x06new_df\x94\x8c\x06length\x94\x8c\x0bcluster_cnt\x94\x8c\rdavies_scores\x94h3\x8c\x03hac\x94\x8c\x13cluster_assignments\x94\x8c\x05score\x94\x8c\x0bmin_cluster\x94\x8c\x0enum_of_cluster\x94h\r\x8c\x14selected_user_gender\x94\x8c\x0csame_cluster\x94\x8c\x05liked\x94h\x19\x8c\x06series\x94h\x07hS\x8c\x02st\x94h9\x8c\x04prof\x94\x8c\x08like_mat\x94h\xc0\x8c\x04df_x\x94\x8c\x0buser_rating\x94\x8c\x07ratings\x94\x8c\x02a0\x94\x8c\x02b0\x94h\xbah\xbb\x8c\x02b1\x94\x8c\x04rank\x94\x8c\x19selected_user_orientation\x94\x8c\x15sorted_recommendation\x94\x8c\x06top_10\x94\x8c\ndemo_boost\x94t\x94h\x1b\x8c\x16demo_recommend_profile\x94K\x01C\xf2\x00\x01\x04\x01\n\x01\x0c\x01\x0c\x01\x0e\x01\x0c\x01\x0c\x03 \x01\x08\x02\x0c\x17\x08\x03\x12\x02\x06\x010\x01V\x02\x06\x03\x08\x01\x12\x03\x06\x04\x0e\x03\x16\x03\x12\x03\x10\x01\x10\x03\x16\x03\x04\x03\x08\x03\n\x02\n\x02\x06\x02\x14\x03(\x01\x08\x01\x1a\x01\n\x03\n\x03\n\x03\x06\x06\x08\x02\x08\x02\x0c\x01\x08\x01\x08\x03\n\x01\n\x01\n\x02\x14\x01\x08\x02\x0e\x02\x04\x01\x10\x01\x10\x01\x10\x01\x0c\x01\n\x01\x0e\x01\n\x02\x12\x01\x12\x01\x12\x01\x0c\x01\x1c\x01\x0e\x01\n\x01\x1c\x02\n\x01\x06\x01\x0e\x01\x0e\x01\x12\x01\x0e\x01\x0e\x02\x0e\x01\x0e\x01\x0e\x01\x12\x01\x12\x01\x12\x01\x1e\x02\n\x03\n\x01\x12\x01\x10\x01\x0e\x01\x0e\x01\n\x02\x0e\x11\x04\x02\x10\x01\x12\x02\x08\x01\x0c\x02\x0c\x01\x08\x01\x04\x01\x0e\x03\x08\x01\x10\x01\x10\x01\x10\x01\x0e\x01\x0e\x01\x0e\x01\x08\x01\x0e\x02\x06\x01\x10\x01\x16\x01\x0e\x02\x14\x01\x12\x01\x14\x01\x12\x01\x14\x01\x12\x01\x14\x01\x10\x02\x0e\x01\n\x01\x0e\x03\x94)hWh\x84h\xc2\x87\x94t\x94R\x94c__builtin__\n__main__\nj\x15\x01\x00\x00NN}\x94Nt\x94R\x94.'
        )
        reco = id(1)
        print(reco)
        rows_as_dict = []

        for row in range(len(reco)):
            response = {
                'id': reco.iloc[row].id,
                'matches': round(reco['bayesian'].iloc[row]*100, 2),
            }

            rows_as_dict.append(response)

        return jsonify(rows_as_dict), 200


@app.route('/api/add', methods=['GET', 'POST'])
def all_cat():
    if request.method == 'POST':
        if not request.json:
            abort(404)
        data_list = request.json['data']

        df = pd.DataFrame.from_records(data_list)
        print(df)
        df.to_csv(r'C:\Users\Lenovo\Documents\Y3S3\FYP2\tinder-expo-master\tinder-expo-master\data.csv',
                  index=False, header=True)

        return jsonify(request.json['data']), 204


if __name__ == '__main__':
    app.jinja_env.auto_reload = True
    app.config['TEMPLATES_AUTO_RELOAD'] = True
    parser = ArgumentParser()
    # parser.add_argument('-p', '--port', default=5000,
    #                     type=int, help='port to listen on')
    # args = parser.parse_args()
    # port = args.port

    app.run(host='0.0.0.0', debug=True)
